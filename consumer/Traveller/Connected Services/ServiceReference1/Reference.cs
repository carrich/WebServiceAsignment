//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Traveller.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Traller", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class Traller : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImagePost", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class ImagePost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Posted", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class Posted : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostComment", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class PostComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string comment1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> postIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatAt {
            get {
                return this.CreatAtField;
            }
            set {
                if ((this.CreatAtField.Equals(value) != true)) {
                    this.CreatAtField = value;
                    this.RaisePropertyChanged("CreatAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Vote {
            get {
                return this.VoteField;
            }
            set {
                if ((this.VoteField.Equals(value) != true)) {
                    this.VoteField = value;
                    this.RaisePropertyChanged("Vote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment1 {
            get {
                return this.comment1Field;
            }
            set {
                if ((object.ReferenceEquals(this.comment1Field, value) != true)) {
                    this.comment1Field = value;
                    this.RaisePropertyChanged("comment1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> postId {
            get {
                return this.postIdField;
            }
            set {
                if ((this.postIdField.Equals(value) != true)) {
                    this.postIdField = value;
                    this.RaisePropertyChanged("postId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubComment", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class SubComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcommentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateAt {
            get {
                return this.CreateAtField;
            }
            set {
                if ((this.CreateAtField.Equals(value) != true)) {
                    this.CreateAtField = value;
                    this.RaisePropertyChanged("CreateAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subcomment {
            get {
                return this.SubcommentField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcommentField, value) != true)) {
                    this.SubcommentField = value;
                    this.RaisePropertyChanged("Subcomment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Traveler", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class Traveler : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Image[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Post[] PostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Role RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> createdAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> updatedAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Image[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Post[] Posts {
            get {
                return this.PostsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostsField, value) != true)) {
                    this.PostsField = value;
                    this.RaisePropertyChanged("Posts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Role Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> createdAt {
            get {
                return this.createdAtField;
            }
            set {
                if ((this.createdAtField.Equals(value) != true)) {
                    this.createdAtField = value;
                    this.RaisePropertyChanged("createdAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dob {
            get {
                return this.dobField;
            }
            set {
                if ((this.dobField.Equals(value) != true)) {
                    this.dobField = value;
                    this.RaisePropertyChanged("dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> updatedAt {
            get {
                return this.updatedAtField;
            }
            set {
                if ((this.updatedAtField.Equals(value) != true)) {
                    this.updatedAtField = value;
                    this.RaisePropertyChanged("updatedAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Traveler[] TravelersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string role_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Traveler[] Travelers {
            get {
                return this.TravelersField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelersField, value) != true)) {
                    this.TravelersField = value;
                    this.RaisePropertyChanged("Travelers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role_name {
            get {
                return this.role_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.role_nameField, value) != true)) {
                    this.role_nameField = value;
                    this.RaisePropertyChanged("role_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Post PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Sub_Comment[] Sub_CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Traveler TravelerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string comment1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> createdAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> postIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> updatedAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Post Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Sub_Comment[] Sub_Comment {
            get {
                return this.Sub_CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.Sub_CommentField, value) != true)) {
                    this.Sub_CommentField = value;
                    this.RaisePropertyChanged("Sub_Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Traveler Traveler {
            get {
                return this.TravelerField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelerField, value) != true)) {
                    this.TravelerField = value;
                    this.RaisePropertyChanged("Traveler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Vote {
            get {
                return this.VoteField;
            }
            set {
                if ((this.VoteField.Equals(value) != true)) {
                    this.VoteField = value;
                    this.RaisePropertyChanged("Vote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment1 {
            get {
                return this.comment1Field;
            }
            set {
                if ((object.ReferenceEquals(this.comment1Field, value) != true)) {
                    this.comment1Field = value;
                    this.RaisePropertyChanged("comment1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> createdAt {
            get {
                return this.createdAtField;
            }
            set {
                if ((this.createdAtField.Equals(value) != true)) {
                    this.createdAtField = value;
                    this.RaisePropertyChanged("createdAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> postId {
            get {
                return this.postIdField;
            }
            set {
                if ((this.postIdField.Equals(value) != true)) {
                    this.postIdField = value;
                    this.RaisePropertyChanged("postId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> updatedAt {
            get {
                return this.updatedAtField;
            }
            set {
                if ((this.updatedAtField.Equals(value) != true)) {
                    this.updatedAtField = value;
                    this.RaisePropertyChanged("updatedAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Post PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Traveler TravelerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> createdAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> updatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Post Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PostId {
            get {
                return this.PostIdField;
            }
            set {
                if ((this.PostIdField.Equals(value) != true)) {
                    this.PostIdField = value;
                    this.RaisePropertyChanged("PostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Traveler Traveler {
            get {
                return this.TravelerField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelerField, value) != true)) {
                    this.TravelerField = value;
                    this.RaisePropertyChanged("Traveler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> createdAt {
            get {
                return this.createdAtField;
            }
            set {
                if ((this.createdAtField.Equals(value) != true)) {
                    this.createdAtField = value;
                    this.RaisePropertyChanged("createdAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> updatedAt {
            get {
                return this.updatedAtField;
            }
            set {
                if ((this.updatedAtField.Equals(value) != true)) {
                    this.updatedAtField = value;
                    this.RaisePropertyChanged("updatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class Post : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Image[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Post Post1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Post Post2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Traveler TravelerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> createdAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> updatedAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Image[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Post Post1 {
            get {
                return this.Post1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Post1Field, value) != true)) {
                    this.Post1Field = value;
                    this.RaisePropertyChanged("Post1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Post Post2 {
            get {
                return this.Post2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Post2Field, value) != true)) {
                    this.Post2Field = value;
                    this.RaisePropertyChanged("Post2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Traveler Traveler {
            get {
                return this.TravelerField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelerField, value) != true)) {
                    this.TravelerField = value;
                    this.RaisePropertyChanged("Traveler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string content {
            get {
                return this.contentField;
            }
            set {
                if ((object.ReferenceEquals(this.contentField, value) != true)) {
                    this.contentField = value;
                    this.RaisePropertyChanged("content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> createdAt {
            get {
                return this.createdAtField;
            }
            set {
                if ((this.createdAtField.Equals(value) != true)) {
                    this.createdAtField = value;
                    this.RaisePropertyChanged("createdAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> updatedAt {
            get {
                return this.updatedAtField;
            }
            set {
                if ((this.updatedAtField.Equals(value) != true)) {
                    this.updatedAtField = value;
                    this.RaisePropertyChanged("updatedAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sub_Comment", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class Sub_Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Traveller.ServiceReference1.Comment CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> createdAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sub_Comment1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> updateAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Traveller.ServiceReference1.Comment Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> createdAt {
            get {
                return this.createdAtField;
            }
            set {
                if ((this.createdAtField.Equals(value) != true)) {
                    this.createdAtField = value;
                    this.RaisePropertyChanged("createdAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sub_Comment1 {
            get {
                return this.sub_Comment1Field;
            }
            set {
                if ((object.ReferenceEquals(this.sub_Comment1Field, value) != true)) {
                    this.sub_Comment1Field = value;
                    this.RaisePropertyChanged("sub_Comment1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> updateAt {
            get {
                return this.updateAtField;
            }
            set {
                if ((this.updateAtField.Equals(value) != true)) {
                    this.updateAtField = value;
                    this.RaisePropertyChanged("updateAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceTravel")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createImage", ReplyAction="http://tempuri.org/IService1/createImageResponse")]
        bool createImage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createImage", ReplyAction="http://tempuri.org/IService1/createImageResponse")]
        System.Threading.Tasks.Task<bool> createImageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        Traveller.ServiceReference1.Traller Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Traller> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTrallerById", ReplyAction="http://tempuri.org/IService1/GetTrallerByIdResponse")]
        Traveller.ServiceReference1.Traller GetTrallerById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTrallerById", ReplyAction="http://tempuri.org/IService1/GetTrallerByIdResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Traller> GetTrallerByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTrallerByEmail", ReplyAction="http://tempuri.org/IService1/GetTrallerByEmailResponse")]
        Traveller.ServiceReference1.Traller GetTrallerByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTrallerByEmail", ReplyAction="http://tempuri.org/IService1/GetTrallerByEmailResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Traller> GetTrallerByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImageByUserId", ReplyAction="http://tempuri.org/IService1/GetImageByUserIdResponse")]
        Traveller.ServiceReference1.ImagePost GetImageByUserId(System.Nullable<int> useId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImageByUserId", ReplyAction="http://tempuri.org/IService1/GetImageByUserIdResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.ImagePost> GetImageByUserIdAsync(System.Nullable<int> useId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostDetail", ReplyAction="http://tempuri.org/IService1/PostDetailResponse")]
        Traveller.ServiceReference1.Posted PostDetail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostDetail", ReplyAction="http://tempuri.org/IService1/PostDetailResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted> PostDetailAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPostsbyUserId", ReplyAction="http://tempuri.org/IService1/GetPostsbyUserIdResponse")]
        Traveller.ServiceReference1.Posted[] GetPostsbyUserId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPostsbyUserId", ReplyAction="http://tempuri.org/IService1/GetPostsbyUserIdResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted[]> GetPostsbyUserIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTravelers", ReplyAction="http://tempuri.org/IService1/GetTravelersResponse")]
        Traveller.ServiceReference1.Traller[] GetTravelers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTravelers", ReplyAction="http://tempuri.org/IService1/GetTravelersResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Traller[]> GetTravelersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchImage", ReplyAction="http://tempuri.org/IService1/SearchImageResponse")]
        Traveller.ServiceReference1.ImagePost[] SearchImage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchImage", ReplyAction="http://tempuri.org/IService1/SearchImageResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.ImagePost[]> SearchImageAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Search", ReplyAction="http://tempuri.org/IService1/SearchResponse")]
        Traveller.ServiceReference1.Posted[] Search(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Search", ReplyAction="http://tempuri.org/IService1/SearchResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted[]> SearchAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetComments", ReplyAction="http://tempuri.org/IService1/GetCommentsResponse")]
        Traveller.ServiceReference1.PostComment[] GetComments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetComments", ReplyAction="http://tempuri.org/IService1/GetCommentsResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.PostComment[]> GetCommentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubComments", ReplyAction="http://tempuri.org/IService1/GetSubCommentsResponse")]
        Traveller.ServiceReference1.SubComment[] GetSubComments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubComments", ReplyAction="http://tempuri.org/IService1/GetSubCommentsResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.SubComment[]> GetSubCommentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCommentsbyPostId", ReplyAction="http://tempuri.org/IService1/GetCommentsbyPostIdResponse")]
        Traveller.ServiceReference1.PostComment[] GetCommentsbyPostId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCommentsbyPostId", ReplyAction="http://tempuri.org/IService1/GetCommentsbyPostIdResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.PostComment[]> GetCommentsbyPostIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubCommentsbyCommentId", ReplyAction="http://tempuri.org/IService1/GetSubCommentsbyCommentIdResponse")]
        Traveller.ServiceReference1.SubComment[] GetSubCommentsbyCommentId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubCommentsbyCommentId", ReplyAction="http://tempuri.org/IService1/GetSubCommentsbyCommentIdResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.SubComment[]> GetSubCommentsbyCommentIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostComment", ReplyAction="http://tempuri.org/IService1/PostCommentResponse")]
        bool PostComment([System.ServiceModel.MessageParameterAttribute(Name="postComment")] Traveller.ServiceReference1.PostComment postComment1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostComment", ReplyAction="http://tempuri.org/IService1/PostCommentResponse")]
        System.Threading.Tasks.Task<bool> PostCommentAsync(Traveller.ServiceReference1.PostComment postComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSubComment", ReplyAction="http://tempuri.org/IService1/PostSubCommentResponse")]
        bool PostSubComment(Traveller.ServiceReference1.SubComment subComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSubComment", ReplyAction="http://tempuri.org/IService1/PostSubCommentResponse")]
        System.Threading.Tasks.Task<bool> PostSubCommentAsync(Traveller.ServiceReference1.SubComment subComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CurrentPost", ReplyAction="http://tempuri.org/IService1/CurrentPostResponse")]
        Traveller.ServiceReference1.Posted CurrentPost(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CurrentPost", ReplyAction="http://tempuri.org/IService1/CurrentPostResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted> CurrentPostAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImages", ReplyAction="http://tempuri.org/IService1/GetImagesResponse")]
        Traveller.ServiceReference1.ImagePost[] GetImages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImages", ReplyAction="http://tempuri.org/IService1/GetImagesResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.ImagePost[]> GetImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImagePost", ReplyAction="http://tempuri.org/IService1/ImagePostResponse")]
        bool ImagePost([System.ServiceModel.MessageParameterAttribute(Name="imagePost")] Traveller.ServiceReference1.ImagePost imagePost1, int PostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImagePost", ReplyAction="http://tempuri.org/IService1/ImagePostResponse")]
        System.Threading.Tasks.Task<bool> ImagePostAsync(Traveller.ServiceReference1.ImagePost imagePost, int PostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImageUserPost", ReplyAction="http://tempuri.org/IService1/ImageUserPostResponse")]
        bool ImageUserPost(Traveller.ServiceReference1.ImagePost imagePost, int UsertId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImageUserPost", ReplyAction="http://tempuri.org/IService1/ImageUserPostResponse")]
        System.Threading.Tasks.Task<bool> ImageUserPostAsync(Traveller.ServiceReference1.ImagePost imagePost, int UsertId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPosts", ReplyAction="http://tempuri.org/IService1/GetPostsResponse")]
        Traveller.ServiceReference1.Posted[] GetPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPosts", ReplyAction="http://tempuri.org/IService1/GetPostsResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted[]> GetPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registor", ReplyAction="http://tempuri.org/IService1/RegistorResponse")]
        bool Registor(Traveller.ServiceReference1.Traveler traveler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registor", ReplyAction="http://tempuri.org/IService1/RegistorResponse")]
        System.Threading.Tasks.Task<bool> RegistorAsync(Traveller.ServiceReference1.Traveler traveler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Post1", ReplyAction="http://tempuri.org/IService1/Post1Response")]
        bool Post1(string title, string content, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Post1", ReplyAction="http://tempuri.org/IService1/Post1Response")]
        System.Threading.Tasks.Task<bool> Post1Async(string title, string content, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Post", ReplyAction="http://tempuri.org/IService1/PostResponse")]
        bool Post([System.ServiceModel.MessageParameterAttribute(Name="post")] Traveller.ServiceReference1.Post post1, Traveller.ServiceReference1.Image image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Post", ReplyAction="http://tempuri.org/IService1/PostResponse")]
        System.Threading.Tasks.Task<bool> PostAsync(Traveller.ServiceReference1.Post post, Traveller.ServiceReference1.Image image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Traveller.ServiceReference1.CompositeType GetDataUsingDataContract(Traveller.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Traveller.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(Traveller.ServiceReference1.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Traveller.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Traveller.ServiceReference1.IService1>, Traveller.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool createImage() {
            return base.Channel.createImage();
        }
        
        public System.Threading.Tasks.Task<bool> createImageAsync() {
            return base.Channel.createImageAsync();
        }
        
        public Traveller.ServiceReference1.Traller Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Traller> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public Traveller.ServiceReference1.Traller GetTrallerById(System.Nullable<int> id) {
            return base.Channel.GetTrallerById(id);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Traller> GetTrallerByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetTrallerByIdAsync(id);
        }
        
        public Traveller.ServiceReference1.Traller GetTrallerByEmail(string email) {
            return base.Channel.GetTrallerByEmail(email);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Traller> GetTrallerByEmailAsync(string email) {
            return base.Channel.GetTrallerByEmailAsync(email);
        }
        
        public Traveller.ServiceReference1.ImagePost GetImageByUserId(System.Nullable<int> useId) {
            return base.Channel.GetImageByUserId(useId);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.ImagePost> GetImageByUserIdAsync(System.Nullable<int> useId) {
            return base.Channel.GetImageByUserIdAsync(useId);
        }
        
        public Traveller.ServiceReference1.Posted PostDetail(int id) {
            return base.Channel.PostDetail(id);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted> PostDetailAsync(int id) {
            return base.Channel.PostDetailAsync(id);
        }
        
        public Traveller.ServiceReference1.Posted[] GetPostsbyUserId(int id) {
            return base.Channel.GetPostsbyUserId(id);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted[]> GetPostsbyUserIdAsync(int id) {
            return base.Channel.GetPostsbyUserIdAsync(id);
        }
        
        public Traveller.ServiceReference1.Traller[] GetTravelers() {
            return base.Channel.GetTravelers();
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Traller[]> GetTravelersAsync() {
            return base.Channel.GetTravelersAsync();
        }
        
        public Traveller.ServiceReference1.ImagePost[] SearchImage(int id) {
            return base.Channel.SearchImage(id);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.ImagePost[]> SearchImageAsync(int id) {
            return base.Channel.SearchImageAsync(id);
        }
        
        public Traveller.ServiceReference1.Posted[] Search(string name) {
            return base.Channel.Search(name);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted[]> SearchAsync(string name) {
            return base.Channel.SearchAsync(name);
        }
        
        public Traveller.ServiceReference1.PostComment[] GetComments() {
            return base.Channel.GetComments();
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.PostComment[]> GetCommentsAsync() {
            return base.Channel.GetCommentsAsync();
        }
        
        public Traveller.ServiceReference1.SubComment[] GetSubComments() {
            return base.Channel.GetSubComments();
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.SubComment[]> GetSubCommentsAsync() {
            return base.Channel.GetSubCommentsAsync();
        }
        
        public Traveller.ServiceReference1.PostComment[] GetCommentsbyPostId(int id) {
            return base.Channel.GetCommentsbyPostId(id);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.PostComment[]> GetCommentsbyPostIdAsync(int id) {
            return base.Channel.GetCommentsbyPostIdAsync(id);
        }
        
        public Traveller.ServiceReference1.SubComment[] GetSubCommentsbyCommentId(int id) {
            return base.Channel.GetSubCommentsbyCommentId(id);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.SubComment[]> GetSubCommentsbyCommentIdAsync(int id) {
            return base.Channel.GetSubCommentsbyCommentIdAsync(id);
        }
        
        public bool PostComment(Traveller.ServiceReference1.PostComment postComment1) {
            return base.Channel.PostComment(postComment1);
        }
        
        public System.Threading.Tasks.Task<bool> PostCommentAsync(Traveller.ServiceReference1.PostComment postComment) {
            return base.Channel.PostCommentAsync(postComment);
        }
        
        public bool PostSubComment(Traveller.ServiceReference1.SubComment subComment) {
            return base.Channel.PostSubComment(subComment);
        }
        
        public System.Threading.Tasks.Task<bool> PostSubCommentAsync(Traveller.ServiceReference1.SubComment subComment) {
            return base.Channel.PostSubCommentAsync(subComment);
        }
        
        public Traveller.ServiceReference1.Posted CurrentPost(string name) {
            return base.Channel.CurrentPost(name);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted> CurrentPostAsync(string name) {
            return base.Channel.CurrentPostAsync(name);
        }
        
        public Traveller.ServiceReference1.ImagePost[] GetImages() {
            return base.Channel.GetImages();
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.ImagePost[]> GetImagesAsync() {
            return base.Channel.GetImagesAsync();
        }
        
        public bool ImagePost(Traveller.ServiceReference1.ImagePost imagePost1, int PostId) {
            return base.Channel.ImagePost(imagePost1, PostId);
        }
        
        public System.Threading.Tasks.Task<bool> ImagePostAsync(Traveller.ServiceReference1.ImagePost imagePost, int PostId) {
            return base.Channel.ImagePostAsync(imagePost, PostId);
        }
        
        public bool ImageUserPost(Traveller.ServiceReference1.ImagePost imagePost, int UsertId) {
            return base.Channel.ImageUserPost(imagePost, UsertId);
        }
        
        public System.Threading.Tasks.Task<bool> ImageUserPostAsync(Traveller.ServiceReference1.ImagePost imagePost, int UsertId) {
            return base.Channel.ImageUserPostAsync(imagePost, UsertId);
        }
        
        public Traveller.ServiceReference1.Posted[] GetPosts() {
            return base.Channel.GetPosts();
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.Posted[]> GetPostsAsync() {
            return base.Channel.GetPostsAsync();
        }
        
        public bool Registor(Traveller.ServiceReference1.Traveler traveler) {
            return base.Channel.Registor(traveler);
        }
        
        public System.Threading.Tasks.Task<bool> RegistorAsync(Traveller.ServiceReference1.Traveler traveler) {
            return base.Channel.RegistorAsync(traveler);
        }
        
        public bool Post1(string title, string content, int UserId) {
            return base.Channel.Post1(title, content, UserId);
        }
        
        public System.Threading.Tasks.Task<bool> Post1Async(string title, string content, int UserId) {
            return base.Channel.Post1Async(title, content, UserId);
        }
        
        public bool Post(Traveller.ServiceReference1.Post post1, Traveller.ServiceReference1.Image image) {
            return base.Channel.Post(post1, image);
        }
        
        public System.Threading.Tasks.Task<bool> PostAsync(Traveller.ServiceReference1.Post post, Traveller.ServiceReference1.Image image) {
            return base.Channel.PostAsync(post, image);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Traveller.ServiceReference1.CompositeType GetDataUsingDataContract(Traveller.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Traveller.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(Traveller.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
